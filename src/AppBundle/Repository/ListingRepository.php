<?php

namespace AppBundle\Repository;
use Symfony\Bridge\Doctrine\Security\User\UserLoaderInterface;
use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Listing;
use Symfony\Component\HttpFoundation\Request;

/**
 * ListingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ListingRepository extends \Doctrine\ORM\EntityRepository{
	/**
     * @return listing[]
     */
	public function getList($user_id){


        $query = $this->createQueryBuilder('A')
        ->select('B.id')
        ->join('A.parentId', 'B')
        ->where('A.userID = :user')
        ->setParameter('user', $user_id)->getQuery();
         $listArr = $query->execute();
        echo "<pre>";
            print_r($listArr);
            echo "</pre>";

    	/*$query = $this->createQueryBuilder('Listing')
                ->select('Listing.name','Listing.id')
                ->where('Listing.status = 1','Listing.parentId = 0','Listing.userID = :user')->setParameter('user', $user_id)
                ->getQuery();
       return  $listArr = $query->execute();*/
       /* $records = array();
        $master = array();
        $collect =array();
        foreach ($listArr as $keys => $value) {
            $childrens = array(); 
            $main = array();
            $childRecord = $this->createQueryBuilder('Listing')
                ->select('Listing.name','Listing.id')
                ->where('Listing.status = 1','Listing.parentId = :parent')->setParameter('parent', $value['id'])->getQuery();
            $itemArr = $childRecord->execute();
            $main[] = $listArr[$keys];
             foreach ($itemArr as $key => $val) {
                $childrens[] = $itemArr[$key]; 
              }
            $main[] = $childrens;
            $collect[] = $main;
        }
            echo "<pre>";
            print_r($collect[0]);
            echo "</pre>";*/
    }

}
